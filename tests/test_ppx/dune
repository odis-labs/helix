(executable
 (name pp)
 (modules pp)
 (libraries helix.ppx ppxlib))

(rule
 (target Test.actual.ml)
 (deps
  (:pp pp.exe)
  (:input Test.re))
 (action
  (with-outputs-to
   %{target}
   (pipe-stdout
    (run refmt --print=ml %{input})
    (run ./%{pp} --impl -)
    (run ocamlformat --exp-grouping=preserve --impl -)))))

(rule
 (alias runtest)
 (deps
  (file Test.expected.ml)
  (file Test.actual.ml))
 (action
  (diff Test.expected.ml Test.actual.ml)))
