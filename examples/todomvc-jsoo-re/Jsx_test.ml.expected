[@@@ocaml.ppx.context
  {
    tool_name = "ppx_driver";
    include_dirs = [];
    load_path = [];
    open_modules = [];
    for_package = None;
    debug = false;
    use_threads = false;
    use_vmthreads = false;
    recursive_types = false;
    principal = false;
    transparent_modules = false;
    unboxed_types = false;
    unsafe_string = false;
    cookies = []
  }]
module Jsx =
  struct
    let fragment _children = ()
    let null = ()
    module Attr =
      struct let a _v = ()
             let x _v = ()
             let o _v = ()
             let m _v = () end
    module Elem =
      struct
        let e _a _c = ()
        let n _a _c = ()
        let m _a _c = ()
        let x _a _c = ()
        let l _a _c = ()
        let t _a _c = ()
      end
  end
module X = struct let make _attrs = () end
module Y = struct let make _attrs _children = () end
let a = 101
let o = 102
let mi = 103
let _ = Jsx.Elem.e [||]
let _ = Jsx.Elem.n [||] [|(Jsx.Elem.m [||] [|1|])|]
let _ = Jsx.Elem.x [|(Jsx.Attr.a 5)|] [|"hey"|]
let _ = Jsx.Elem.l [||] [|1;2;3|]
let _ =
  Jsx.Elem.t [|(Jsx.Attr.a a);(Jsx.Attr.x 1);(Jsx.Attr.o o);(Jsx.Attr.m mi)|]
    [|5|]
let _ = X.make [|(Jsx.Attr.a 5)|]
let _ = Y.make [|(Jsx.Attr.a 5)|] [|1;2|]
let _ = Jsx.fragment [|5|]
let _ = Jsx.Elem.t [|(Jsx.Attr.x (1, 2))|]